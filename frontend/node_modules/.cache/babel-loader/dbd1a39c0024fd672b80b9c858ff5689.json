{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\24x7s\\\\OneDrive\\\\Documents\\\\Projects\\\\S_and_P_Project\\\\frontend\\\\src\\\\PEBox.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PEBox() {\n  _s();\n  // Initialize state variables for the data\n  const [data, setData] = useState([]);\n  const [sp500PE, setSp500PE] = useState(\"\");\n\n  // Function to fetch data from the Flask server\n  const fetchData = async () => {\n    try {\n      const response = await fetch('/data'); // Replace '/data' with the actual route if it's different\n      const jsonData = await response.json();\n\n      // Update state variables with the fetched data\n      setData(jsonData.data);\n      setSp500PE(jsonData.sp500_pe);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  // Use an effect hook to fetch the data when the component mounts\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pe-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"S&P 500 P/E Ratio: \", sp500PE]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), data.map((row, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pe-row\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Symbol: \", row[0], \", P/E Ratio: \", row[1]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(PEBox, \"Fz+Mwtajc6H1tcrC+iN468lA/qc=\");\n_c = PEBox;\nexport default PEBox;\nvar _c;\n$RefreshReg$(_c, \"PEBox\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","PEBox","_s","data","setData","sp500PE","setSp500PE","fetchData","response","fetch","jsonData","json","sp500_pe","err","console","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","row","index","_c","$RefreshReg$"],"sources":["C:/Users/24x7s/OneDrive/Documents/Projects/S_and_P_Project/frontend/src/PEBox.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction PEBox() {\r\n    // Initialize state variables for the data\r\n    const [data, setData] = useState([]);\r\n    const [sp500PE, setSp500PE] = useState(\"\");\r\n\r\n    \r\n    // Function to fetch data from the Flask server\r\n    const fetchData = async () => {\r\n        try {\r\n            const response = await fetch('/data');  // Replace '/data' with the actual route if it's different\r\n            const jsonData = await response.json();\r\n\r\n            // Update state variables with the fetched data\r\n            setData(jsonData.data);\r\n            setSp500PE(jsonData.sp500_pe);\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    }\r\n\r\n    // Use an effect hook to fetch the data when the component mounts\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"pe-box\">\r\n            <h2>S&P 500 P/E Ratio: {sp500PE}</h2>\r\n            {data.map((row, index) => (\r\n                <div key={index} className=\"pe-row\">\r\n                    <p>Symbol: {row[0]}, P/E Ratio: {row[1]}</p>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PEBox;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAG1C;EACA,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAE;MACxC,MAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;MAEtC;MACAP,OAAO,CAACM,QAAQ,CAACP,IAAI,CAAC;MACtBG,UAAU,CAACI,QAAQ,CAACE,QAAQ,CAAC;IACjC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVC,OAAO,CAACC,KAAK,CAACF,GAAG,CAACG,OAAO,CAAC;IAC9B;EACJ,CAAC;;EAED;EACAnB,SAAS,CAAC,MAAM;IACZU,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA;IAAKiB,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACnBlB,OAAA;MAAAkB,QAAA,GAAI,qBAAmB,EAACb,OAAO;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACpCnB,IAAI,CAACoB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACjBzB,OAAA;MAAiBiB,SAAS,EAAC,QAAQ;MAAAC,QAAA,eAC/BlB,OAAA;QAAAkB,QAAA,GAAG,UAAQ,EAACM,GAAG,CAAC,CAAC,CAAC,EAAC,eAAa,EAACA,GAAG,CAAC,CAAC,CAAC;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC,GADtCG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACpB,EAAA,CAnCQD,KAAK;AAAAyB,EAAA,GAALzB,KAAK;AAqCd,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}